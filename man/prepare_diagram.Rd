% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prepare_diagram.R
\name{prepare_diagram}
\alias{prepare_diagram}
\title{Create data frames for plotting from model elements.}
\usage{
prepare_diagram(
  model_list,
  model_settings = list(varlocations = NULL, varbox_x_scaling = 1, varbox_y_scaling =
    1, varspace_x_scaling = 1, varspace_y_scaling = 1)
)
}
\arguments{
\item{model_list}{A list of model elements. This list is required and
must contain these two elements:
\itemize{
\item \code{varlabels}: A character vector with labels for each variable.
\item \code{flows}: A list that is the same length as \code{varlabels}. Each sub-list
element is a character vector of any length specifying the flows into
and out of the variable. Note that \strong{flowdiagramr} assumes that the
order of \code{flows} and \code{varlabels} match.
\item IMPORTANT: All varlabel entries must start with an upper case letter,
followed by any combination of letters and numbers (e.g.,
S, Si, or Aml2). All parameters contained in the flows
must start with a lower case letter
followed by any combination of letters and numbers (e.g.,
b, bBmax, kS, p21S). All variables and parameters MUST be separated by
math notation (e.g., +, -, *, /).
\item See examples and details below and vignettes.
}}

\item{model_settings}{A list of optional model settings. The following
elements are supported and default values are provided:
\itemize{
\item \code{varlocations}: A character matrix of variable locations on a grid.
\item \code{varbox_x_scaling}: A scalar that changes the default width of
variable boxes. For example, \code{varbox_x_scaling = 1.5} makes each box
1.5 times the default width.
\item \code{varbox_y_scaling}: A scalar that changes the default height of
variable boxes. For example, \code{varbox_y_scaling = 1.5} makes each box
1.5 times the default height.
\item \code{varspace_x_scaling}: A scalar that changes the default spacing between
variable boxes in the x dimension. For example, \code{varspace_x_scaling = 1.5}
makes each box 1.5 times farther apart in the x dimension than the
default spacing.
\item \code{varspace_y_scaling}: A scalar that changes the default spacing between
variable boxes in the y dimension. For example, \code{varspace_y_scaling = 1.5}
makes each box 1.5 times farther apart in the y dimension than the
default spacing.
}}
}
\value{
A list of two data frames and the original inputs lists. The returned
data frames are:
\itemize{
\item \code{variables}: A data frame containing information for all variables.
The data frame contains these columns:

\itemize{
\item \code{label}: The variable label as provided in the model specification.
\item \code{id}: A numeric id for each variable.
\item \code{name}: If provided, the full text for each variable.
\item \code{xmin}: Left edge location of box.
\item \code{xmax}: Right edge location of box.
\item \code{ymin}: Lower edge of location box.
\item \code{ymax}: Upper edge of location box.
\item \code{xlabel}: Horizontal position (midpoint) of label.
\item \code{ylabel}: Vertical position (midpoint) of label.
\item \code{color}: Default outline color for the box.
\item \code{fill}: Default fill color for the box.
\item \verb{label color}: Default color for text label.
\item \code{label_size}: Size of text to be written into the box.
}

\item \code{flows}: A data frame containing information for all flows.
The data frame contains these columns:
\itemize{
\item \code{id}: A numeric id for each flow.
\item \code{to}: The variable to which the arrow will point. That is, the
variable receiving the flow.
\item \code{from}: The variable from which the arrow originate. That is, the
variable donating the flow.
\item \code{label}: The label of the flow. Typically a mathematical expression.
\item \code{xmin}: The starting horizontal position of the arrow.
\item \code{xmax}: The ending horizontal position of the arrow.
\item \code{ymin}: The starting vertical position of the arrow.
\item \code{ymax}: The ending vertical position of the arrow.
\item \code{xlabel}: Horizontal position (midpoint) of label.
\item \code{ylabel}: Vertical position (midpoint) of label.
\item \code{curvature}: The amount of curvature applied to arrow.
Higher numbers indicate more curvature; 0 = straight line.
\item \code{type}: Type of flow. One of main, interaction, or external.
\item \code{math}: The math from the flows specified by the user. Is a
duplicate of \code{label} so that user can update \code{label} as desired but
retain the original math for reference.
\item \code{color}: Default color of the lines/arrows.
\item \code{linetype}: Default linetype.
\item \code{size}: Default size of the lines.
\item \code{label_color}: Default label color.
\item \code{label_size}: Default text size for label.
\item \code{arrowsize}: Default arrow size.
}
}
}
\description{
This function takes as input a model
consisting of variables/compartments and flows
and creates a list of data frames with label and
position information for plotting a flow diagram.
The resulting object is used as an input to
\code{\link{make_diagram}}, which creates a \strong{ggplot2} based diagram.
Attempts to make decent decisions regarding the placement of nodes (boxes),
flows (arrows), and labels are made. However, complex models with
complex diagrams will likely need user modification. This is documented
in the vignettes.
}
\details{
\code{varlabels} needs to be specified as a vector of model variables,
e.g., varlabels <- c("Pred","Prey").
\code{flows} need to be specified as a list, with each list entry containing the
flows/processes for each variable in the order in which the variables appear.
Flows need to be named according to VARLABEL_flows.
Example: flows <- list(Pred_flows = c(\code{r*Pred}, \code{-k1*Pred*Prey}),
Prey_flows = c(\code{g*Prey}, \code{-k2*Pred*Prey}) )
Each flow, i.e. each entry in the flow vector, needs to be a valid
mathematical expression made up of varlabels and parameters.
The rules are as described above.
As an example, the following includes a parameter \emph{b} and two variables, \emph{S}
and \emph{I}: \code{b*S*I}. The following includes a parameter \emph{s} and two
variables, \emph{Bg} and \emph{I2}: \code{Bg*s*I2}.
See more examples below and in the vignettes.
}
\examples{
#basic model specification
varlabels <- c("S","I","R")
flows <- list(S_flows = c("-b*S*I"),
              I_flows = c("b*S*I","-g*I"),
              R_flows = c("g*I"))
mymodel <- list(varlabels = varlabels, flows = flows)
diag_list <- prepare_diagram(model_list = mymodel)
mydiag <- make_diagram(diag_list)

#adding optional specifications
varnames <- c("Susceptible","Infected","Recovered")
varlocations <-  matrix(data = c("S", "", "R",
                                 "", "I", "" ),
                        nrow = 2, ncol = 3, byrow = TRUE)
mysettings <- list(varlocations = varlocations)
diag_list <- prepare_diagram(model_list = mymodel, model_settings = mysettings)
diagsetting <- list(var_label_text = varlocations, var_label_size = 4)
mydiag <- make_diagram(diag_list)

#another simple model
varlabels = c("Pat","Imm")
flows     = list(Pat_flows = c("g*Pat*(1-Pat/pmax)", "-dP*Pat", "-k*Pat*Imm"),
                 Imm_flows = c("r*Pat*Imm", "-dI*Imm"))
mymodel = list(varlabels = varlabels, flows = flows)
diag_list <- prepare_diagram(mymodel)
mydiag <- make_diagram(diag_list)

#options to switch to vertical layout and adding names
varnames <- c("Pathogen","Immune Response")
varlocations <-  matrix(data = c("Pat", "Imm"),
                        nrow = 2, byrow = TRUE)
mysettings <- list(varlocations = varlocations)
diag_list <- prepare_diagram(mymodel,mysettings)
diagsettings <- list(var_label_text = varnames, var_label_size = 4)
mydiag <- make_diagram(diag_list)

}
