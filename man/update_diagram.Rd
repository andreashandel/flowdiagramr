% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_diagram.R
\name{update_diagram}
\alias{update_diagram}
\title{Updates the aesthetics settings in the variables and flows data frames}
\usage{
update_diagram(diagram_list, diagram_settings = NULL)
}
\arguments{
\item{diagram_list}{A required list of data frames returned from the
\code{\link{prepare_diagram}} function. See that function for details
about this object.}

\item{diagram_settings}{An optional list of diagram aesthetic settings. See
\strong{details} for allowable syntax. The following elements are supported
and default values are provided:
\itemize{
\item \code{var_xmin}: A named numeric vector of offsets to mininum x locations.
\item \code{var_xmax}: A named numeric vector of offsets to maximum x locations.
\item \code{var_ymin}: A named numeric vector of offsets to minimum y locations.
\item \code{var_ymax}: A named numeric vector of offsets to maximum y locations.
\item \code{var_xlabel}: A named numeric vector of offsets to variable label x locations.
\item \code{var_ylabel}: A named numeric vector of offsets to variable label x locations.
\item \code{var_outline_color}: A named character vector of box outline colors.
Default is "black".
\item \code{var_fill_color}: A named character vector of box fill colors. Can be
a named color or HEX code. Default is "#6aa4c8".
\item \code{var_label_color}: A named character vector of variable label colors.
Can be a named color or HEX code. Default is "white".
\item \code{var_label_size}: A named character vector of text sized for variable
labels. Default is 10.
\item \code{flow_xmin}: A named numeric vector of offsets to the minimum x
locations (flow starting points).
\item \code{flow_xmax}: A named numeric vector of offsets to the maximum x
locations (flow ending points).
\item \code{flow_ymin}: A named numeric vector of offsets to the minimum y
locations (flow starting points).
\item \code{flow_ymax}: A named numeric vector of offsets to the maximum y
locations (flow ending points).
\item \code{flow_xlabel}: A named numeric vector of offsets to the flow label x locations.
\item \code{flow_ylabel}: A named numeric vector of offsets to the flow label y locations.
\item \code{flow_curvature}: A named numeric vector numeric curvature values.
\item \code{flow_line_color}: A named character vector specifying the color of
of flow lines. Default is "black".
\item \code{flow_linetype}: A named character vector of linetypes. This
argument is passed to the \code{linetype} argument in ggplot2. From
the ggplot2 documentation: "The linetype aesthetic can be specified
with either an integer (0-6), a name (0 = blank, 1 = solid, 2 = dashed,
3 = dotted, 4 = dotdash, 5 = longdash, 6 = twodash), a mapping to a
discrete variable, or a string of an even number (up to eight) of
hexadecimal digits which give the lengths in consecutive positions in
the string." flowdiagramr uses the character name. Default is "solid".
\item \code{flow_line_size}: A named numeric vector of line sizes. Default
value is 1.
\item \code{flow_label_color}: A named character vector of label colors. Default
is "black".
\item \code{flow_label_size}: A named numeric vector of label text sizes. Default
value is 5.
\item \code{flow_show_label}: A named logical vector of whether to display flow
labels (TRUE) or not (FALSE). Default value is TRUE.
\item \code{flow_arrow_size}: A named numeric vector of arrow head sizes. Default
value is 0.25.
\item \code{flow_show_arrow}: A named logical vector of whether to display flows
(TRUE) or not (FALSE). Default value is TRUE.
}}
}
\value{
The same list of data frames that was sent into the function
with updated style settings (different values in the updated
columns/variables) of the data frames.
}
\description{
This function takes a list as created by \code{\link{prepare_diagram}}
and allows the user to update the styling of the boxes and arrows by setting
the different arguments in the input list of this function.
}
\details{
The user can provide any number of updates in the
\code{diagram_settings} list. Only those provided are updated. If the
function is called with no updates, the names of all elements in
the \code{variables} and \code{flows} data frames are returned.
For location settings (e.g., xmin)
and curvature settings (just for flows), the user must provide a named
vector for the setting argument, where the name matches one or more of
\code{variables$name} (for var_* settings) or \code{flows$name} (for flow_*
settings). For visual aesthetics for variables (e.g., fill_color), the
user must specify a named vector where the name is either "all"
(aesthetic value for all variables) or the name matches one one or more
of the \code{variables$name}. For visual aesthetics for flows (e.g.,
line_color), the user must specify a named vector, where allowable
names are: "all" (color for all lines,  regardless of type or name),
"main" (color for main flows), "interaction" (color for interaction
flows), "external" (color for external flows), or the name of one of the
character values in \code{flows$name}. If a mix of type and name are supplied,
the type is applied first and name-specific values are applied second.
See examples.
}
\examples{
# basic model specification
variables <- c("S","I","R")
flows <- list(S_flows = c("-b*S*I"),
              I_flows = c("b*S*I","-g*I"),
              R_flows = c("g*I"))
mymodel <- list(variables = variables, flows = flows)
diag_list <- prepare_diagram(model_list = mymodel)

# make all variable boxes green
new_setts <- list(var_fill_color = c(all = "green"))
new_list <- update_diagram(diag_list, new_setts)

# make just the S box green
new_setts <- list(var_fill_color = c(S = "green"))
new_list <- update_diagram(diag_list, new_setts)

# make all flow lines red
new_setts <- list(flow_line_color = c(all = "red"))
new_list <- update_diagram(diag_list, new_setts)

# make main flow lines red
new_setts <- list(flow_line_color = c(main = "red"))
new_list <- update_diagram(diag_list, new_setts)

# make the b*S*I interaction flow line red
new_setts <- list(flow_line_color = c(i_bSI = "red"))
new_list <- update_diagram(diag_list, new_setts)

# make all flow lines green except for b*S*I interaction flow, which is blue
new_setts <- list(flow_line_color = c(all = "green", i_bSI = "blue"))
new_list <- update_diagram(diag_list, new_setts)

# combine variable and flow settings
new_setts <- list(flow_line_color = c(all = "green", i_bSI = "blue"),
                  var_fill_color = c(all = "red", S = "cyan"))
new_list <- update_diagram(diag_list, new_setts)

# more extensive updates
newsettings <- list(var_label_color = c(S = "green", I = "blue", R = "red"),
                    flow_line_size = c(interaction = 1.5),
                    flow_line_color = c(all = "grey25",
                                        interaction = "orange",
                                        e_n = "red"))
diag_list3 <- update_diagram(diag_list, diagram_settings = newsettings)

}
